<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:ns="com.emote.dashboard.emotion_distribution.*">
	<mx:Script>
		<![CDATA[
			import mx.charts.HitData;
			import mx.graphics.SolidColor;
			import mx.graphics.IFill;
			import mx.charts.ChartItem;
			import mx.utils.StringUtil;
			import mx.utils.ObjectUtil;
			import mx.charts.renderers.DiamondItemRenderer;
			import mx.messaging.channels.StreamingAMFChannel;
			import mx.charts.series.items.ColumnSeriesItem;
			import com.emote.dashboard.emotion_distribution.ChartItemRenderer;
			import com.emote.dashboard.emotion_distribution.AdvancedAxisRenderer;
			import mx.events.CollectionEvent;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;

		
			[Bindable] private var _emotion_data:XML;
			[Bindable] public function set emotion_data(d:XML):void { this._emotion_data = d; this.fillEmotionDistributionDP(); this.fillIntensityDistributionDP();  }
					   public function get emotion_data():XML { return this._emotion_data; }
					   
			[Bindable] private var _verbatims_data:XML;
			[Bindable] public function set verbatims_data(d:XML):void { this._verbatims_data = d; }
					   public function get verbatims_data():XML { return this._verbatims_data; }
					   
			[Bindable] private var _emotion_distribution:ArrayCollection = new ArrayCollection();
			[Bindable] private var _intensity_distribution:ArrayCollection = new ArrayCollection();
			[Bindable] private var _respondent_count:Number = 0;
			
			[Bindable] private var _verbatimRefreshFunction:Function = null;
			[Bindable] public function set onVerbatimRefresh(f:Function):void { this._verbatimRefreshFunction = f; }
					   public function get onVerbatimRefresh():Function { return this._verbatimRefreshFunction; }
					   
			[Bindable] private var _verbatimDeleteFunction:Function = null;
			[Bindable] public function set onVerbatimDelete(f:Function):void { this._verbatimDeleteFunction = f; }
					   public function get onVerbatimDelete():Function { return this._verbatimDeleteFunction; }
					   
			[Bindable] private var _current_emotion_selected:String = '';
			[Bindable] private var _current_emotion_selected_label:String = '';
			
			[Bindable] public var showDeleteDialog:Boolean = false;
			
			private function fillEmotionDistributionDP():void {
				this._emotion_distribution.removeAll();
				this._respondent_count = 0;
				for each(var bar:XML in this._emotion_data.graph.(@type=='emotion distribution').bar){
					var item:Object = {label: String(bar.@name).toUpperCase(), data: bar.@value, color: ((bar.@color == 'red') ? 0x970600 : 0x567211)};
					item.colorized_title = item.label+'||'+item.color;
					this._emotion_distribution.addItem(item);
					this._respondent_count += Number(bar.@value);
				}
				
				this.emo_dist_rep.dataProvider = null;
				this.emo_dist_rep.dataProvider = this._emotion_distribution;
			}
			private function fillIntensityDistributionDP():void {
				this._intensity_distribution.removeAll();
				for each(var slice:XML in this._emotion_data.graph.(@type=='intensity distrubition').slice){
					var full_label:String = '';
					var color:uint;
					if(slice.@name == 'pp'){ full_label = 'ENTHUSIASTS'; color = 0x00ce03; }
					if(slice.@name == 'mp'){ full_label = 'PARTICIPANTS'; color = 0x797ba7; }
					if(slice.@name == 'pn'){ full_label = 'DETRACTORS'; color = 0xd2230d; }
					if(slice.@name == 'mn'){ full_label = 'INDIFFERENT'; color = 0xcccccc; }
					this._intensity_distribution.addItem({label: slice.@name, data: slice.@value, full:full_label, color: color});
				}
			}
			
			public function doSearch(with_reset:Boolean = false):void {
				if(with_reset){
					this.intensity_chart.clearSelection();
					this.emotion_chart.clearSelection();
					this._current_emotion_selected_label = '';
					this._current_emotion_selected = '';
					
				}
				if(this._verbatimRefreshFunction != null)
					this._verbatimRefreshFunction(this.search_term.text, this._current_emotion_selected);
			}
			
			private function emotionSelected(e:Event):void {
				if(e.target is PieSeries){
					this._current_emotion_selected = (this.intensity_chart.selectedChartItem != null) ? this.intensity_chart.selectedChartItem.item.label : '';
					switch(this._current_emotion_selected){
						case 'pp': this._current_emotion_selected_label = 'ENTHUSIASTS'; break;
						case 'mp': this._current_emotion_selected_label = 'PARTICIPANTS'; break;
						case 'pn': this._current_emotion_selected_label = 'DETRACTORS'; break;
						case 'mn': this._current_emotion_selected_label = 'INDIFFERENT'; break;
						default: this._current_emotion_selected_label = '';
					}
					this.emotion_chart.clearSelection();
				}else{
					this._current_emotion_selected = (this.emotion_chart.selectedChartItem != null) ? String(this.emotion_chart.selectedChartItem.item.label).toLowerCase() : '';
					this._current_emotion_selected_label = this._current_emotion_selected.toUpperCase(); 
					this.intensity_chart.clearSelection();
				} 
				this.doSearch();
			}
			
			private function pieFillFunct(element:ChartItem, index:Number):IFill {
	        	return new SolidColor(element.item.color);
    		}
    		
    		private function pieDataTipFunction(element:HitData):String {
    			return element.item.data + ' responses (' +Math.round(element.chartItem['percentValue']).toString()+'%)';
    		}
    		
    		private function searchKeyDown(e:KeyboardEvent):void {
    			if(e.keyCode == Keyboard.ENTER){
    				this.doSearch();
    			}else if(e.keyCode == Keyboard.ESCAPE){
    				this.search_term.text = '';
    				this.doSearch();
    			}
    		}
    		
		]]>
	</mx:Script>
	<mx:Style>
        @font-face {
            src: url("assets/fonts/MyriadPro-Bold.otf");
            font-family: EMyriadProBold;
            font-weight: bold;
        }
        
        @font-face {
            src: url("assets/fonts/MyriadPro-Regular.otf");
            font-family: EMyriadProReg;
        }
        
        @font-face {
            src: url("assets/fonts/LHFkellieann.TTF");
            font-family: LHFkellieann;
        }

        ColumnChart {
            font-family: EMyriadProBold;
            color: 0xffffff;
            font-weight: bold;
        }
        
        .mainBox {
        	borderStyle:solid;
			borderThickness:0;
			cornerRadius:6px;
			backgroundColor: #ffffff;
			paddingTop:4px;
			paddingBottom:4px;
			paddingRight:4px;
			paddingLeft:4px;
        }
        
        .internalBlackBox {
        	borderStyle:solid;
			borderThickness:0;
			cornerRadius:5px;
			backgroundColor: #000000;
			paddingTop:4px;
			paddingBottom:4px;
			paddingRight:4px;
			paddingLeft:4px;
        }
        
        .internalContentBox {
        	borderStyle:solid;
			borderThickness:0;
			cornerRadius:4px;
			backgroundColor: #a6a6a6;
			paddingTop:0px;
			paddingBottom:0px;
			paddingRight:0px;
			paddingLeft:0px;
			horizontal-align: center;
        } 
        
        .boxLabel {
        	font-family: EMyriadProBold;
            font-color: #000000;
            font-size: 21px;
            padding-bottom: -8px;
            padding-top: -4px;
            padding-left: 20px;
            font-weight: bold;
        }
        
        .whiteTitle {
        	/*font-family: EMyriadProBold;*/
            color: #ffffff;
        }
        
        .scoreLabel {
        	font-family: LHFkellieann;
        	font-size: 13px;
        	color: #ffffff;
        }
    </mx:Style>
	<mx:VBox width="100%" height="100%">
		<mx:HBox width="100%" height="275" styleName="mainBox" horizontalGap="4">
			<mx:VBox width="100%" height="100%" styleName="internalBlackBox">
				<mx:VBox width="100%" height="100%" styleName="internalContentBox" verticalGap="0">
					<mx:Label text="EMOTION SPECTRUM" styleName="boxLabel" color="0x000000" height="24" />
					<mx:VBox width="100%" height="100%" backgroundColor="0x000000">
						
						<mx:ColumnChart id="emotion_chart" width="100%" height="100%" dataProvider="{this._emotion_distribution}" showDataTips="false"
							columnWidthRatio=".98" axisTitleStyleName="whiteTitle"  selectionMode="single" click="emotionSelected(event)"
							fontFamily="EMyriadProBold" color="0xffffff" fontWeight="bold" fontAntiAliasType="advanced" fontSize="13"
							resize="{this.emo_dist_rep.dataProvider = null; this.emo_dist_rep.dataProvider = this._emotion_distribution; }">
        					<mx:horizontalAxis>
           						<mx:CategoryAxis id="ha" categoryField="colorized_title" />
        					</mx:horizontalAxis>
        			
        					<mx:verticalAxis>
           						<mx:LinearAxis id="va" />
        					</mx:verticalAxis>
        			
        					<mx:series>
           						<mx:ColumnSeries xField="colorized_title" yField="data" selectable="true" 
           							itemRenderer="com.emote.dashboard.emotion_distribution.ChartItemRenderer" click="this.emotionSelected(event)" />
        					</mx:series>
        			
        					<mx:verticalAxisRenderers>
								<mx:AxisRenderer axis="{va}" showLine="false" showLabels="false" tickLength="0"/>
            				</mx:verticalAxisRenderers>
            		
            				<mx:horizontalAxisRenderers>
								<mx:AxisRenderer axis="{ha}" showLine="false" showLabels="true" labelRotation="90" labelGap="0" labelRenderer="{new ClassFactory(AdvancedAxisRenderer)}">
								</mx:AxisRenderer>
								<!-- labelRenderer="{new ClassFactory(AdvancedAxisRenderer)}"  -->
            				</mx:horizontalAxisRenderers>
            		
        					<mx:backgroundElements><mx:Array></mx:Array></mx:backgroundElements>
     					</mx:ColumnChart>
     					<mx:HBox width="100%" horizontalGap="1" includeInLayout="false" visible="false">
     						<mx:Repeater id="emo_dist_rep" recycleChildren="true">
     							<ns:LabelPiece item="{emo_dist_rep.currentItem}" backgroundColor="{emo_dist_rep.currentItem.color}" height="100"
     								width="{Math.round(emotion_chart.width/_emotion_distribution.length)*.97}" />
     						</mx:Repeater>
     					</mx:HBox>
     				</mx:VBox> 	
				</mx:VBox>
			</mx:VBox>

			<mx:VBox width="315" height="100%">
				<mx:HBox width="100%" height="60">
					<!-- <mx:HBox width="70%" height="100%" styleName="internalBlackBox" verticalAlign="middle" horizontalAlign="center">
						<mx:VBox verticalGap="0" horizontalAlign="left" paddingRight="-6">
							<mx:Label text="e.mote" styleName="scoreLabel" fontSize="35" paddingBottom="-8" paddingTop="-10" paddingRight="0" />
							<mx:Label text="SCORE" styleName="scoreLabel" fontSize="30" paddingBottom="-10" paddingTop="-9" paddingRight="0" />
						</mx:VBox>						
						<mx:Label text="{this._emotion_data.@emote_score}" styleName="scoreLabel" width="83" textAlign="center"
							fontSize="64" color="0x83c51a" paddingBottom="-14" paddingTop="-10" paddingLeft="0" />
					</mx:HBox>
					<mx:VBox width="30%" height="100%" styleName="internalBlackBox" horizontalAlign="center" verticalAlign="middle" horizontalGap="0" verticalGap="0">-->
						<!--<mx:Image id="pdf_button" source="@Embed(source='assets/pdf-icon.png')" alpha=".5" />--><!-- rollOver="{this.pdf_button.alpha=1;}" rollOut="{this.pdf_button.alpha=.5;}" -->
						<!--<mx:Image id="doc_button" source="@Embed(source='assets/doc-icon.png')" alpha=".5" />--><!-- rollOver="{this.doc_button.alpha=1;}" rollOut="{this.doc_button.alpha=.5;}" -->
					<!--	<mx:Label text="{this._respondent_count}" styleName="scoreLabel" textAlign="center"
							fontSize="48" color="0xc1c1c1" paddingBottom="-10" paddingTop="-8" paddingLeft="-5" paddingRight="-5" width="100%" />
						<mx:Label text="Total Responses" fontFamily="EMyriadProReg" fontSize="14" paddingBottom="-5" paddingTop="-5" color="0xc1c1c1" />
					</mx:VBox> -->
					<mx:HBox width="100%" height="100%" styleName="internalBlackBox" verticalAlign="middle" horizontalAlign="center">
						<mx:Label text="Total Responses:" fontFamily="EMyriadProReg" fontSize="32" paddingBottom="-5" paddingTop="-5" color="0xc1c1c1" />
						<mx:Label text="{this._respondent_count}" styleName="scoreLabel" textAlign="center"
							  fontSize="48" color="0xc1c1c1" paddingBottom="-10" paddingTop="-8" paddingLeft="-5" paddingRight="-5" width="100%" />
					</mx:HBox>
				</mx:HBox>
				<mx:HBox styleName="internalBlackBox" width="100%" height="100%">
					<mx:VBox width="100%" height="100%" styleName="internalContentBox" verticalGap="0">
						<mx:Label text="BAROMETER" styleName="boxLabel" color="0x000000" height="24" />
						<mx:HBox width="100%" height="100%" backgroundColor="0x000000" verticalAlign="middle" horizontalGap="0">
							<mx:PieChart id="intensity_chart" dataProvider="{this._intensity_distribution}" width="163" height="163" selectionMode="single"
								paddingBottom="0" paddingTop="0" paddingLeft="0" paddingRight="0" showDataTips="true" dataTipFunction="{this.pieDataTipFunction}">
							<mx:series>
           						<mx:PieSeries field="data" fillFunction="pieFillFunct" nameField="full" labelPosition="none" explodeRadius=".001"
           							selectable="true" click="this.emotionSelected(event)" useHandCursor="true" buttonMode="true" />
        					</mx:series>
							</mx:PieChart>
							<mx:Legend direction="vertical" horizontalAlign="left" verticalAlign="middle" height="100" width="140"  fontFamily="EMyriadProBold" color="0xffffff"
								fontWeight="bold" fontAntiAliasType="advanced" fontSize="12" styleName="whiteTitle" paddingBottom="0" paddingTop="0" paddingLeft="0" paddingRight="0">
					
									<mx:LegendItem label="ENTHUSIASTS" fontWeight="bold">
           								<mx:fill><mx:SolidColor color="0x00ce03"/></mx:fill>
        							</mx:LegendItem>
        							<mx:LegendItem label="DETRACTORS" fontWeight="bold">
           								<mx:fill><mx:SolidColor color="0xd2230d"/></mx:fill>
        							</mx:LegendItem>
        							<mx:LegendItem label="PARTICIPANTS" fontWeight="bold">
           								<mx:fill><mx:SolidColor color="0x797ba7"/></mx:fill>
        							</mx:LegendItem>
        							<mx:LegendItem label="INDIFFERENT" fontWeight="bold">
           								<mx:fill><mx:SolidColor color="0xcccccc"/></mx:fill>
        							</mx:LegendItem>
        							
							</mx:Legend>
						</mx:HBox>
					</mx:VBox>
				</mx:HBox>
			</mx:VBox>
		</mx:HBox>
		
		
		<mx:VBox width="100%" height="100%" styleName="mainBox">
			<mx:VBox width="100%" height="100%" paddingBottom="0" styleName="internalContentBox">
				<mx:HBox width="100%">
					<mx:HBox width="80%" verticalAlign="middle" height="100%" >
						<mx:Label text="COMMENTS: {(this._current_emotion_selected_label=='')?'ALL EMOTIONS':(this._current_emotion_selected_label)}" styleName="boxLabel" color="0x000000" />
					</mx:HBox>
					<mx:HBox horizontalAlign="right" verticalAlign="middle" paddingBottom="0" height="27" horizontalGap="-22" paddingRight="20" paddingTop="4">
						<mx:Button label="See all comments" click="{this.search_term.text='';this.doSearch(true);}" />
						<mx:Spacer width="50" />
						<mx:TextInput id="search_term" text="{this._verbatims_data.@search}" width="320" focusAlpha="0" borderStyle="solid" borderThickness="3"
							cornerRadius="13" paddingLeft="20" paddingRight="20" keyDown="searchKeyDown(event)" />
						<mx:Image source="@Embed(source='assets/crazy-button.png')" buttonMode="true" click="this.doSearch();" />
					</mx:HBox>
				</mx:HBox>
				<mx:List dataProvider="{this._verbatims_data.verbatim}" width="100%" height="100%" alternatingItemColors="[0xEEEEEE, 0xDFDFDF]" variableRowHeight="true">
					<mx:itemRenderer>
						<mx:Component>
							<mx:HBox width="100%" height="100%" mouseOver="{this.showCloseButton(event)}" mouseOut="{this.hideCloseButton(event)}" verticalAlign="middle">
								<mx:Script>
								<![CDATA[
									import mx.managers.PopUpManager;
									import mx.containers.Box;
									import mx.controls.List;
									import mx.controls.Alert;
									[Embed(source='assets/verbatim_faces/amazed_intensity_1.png')] private var amazed_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/amazed_intensity_2.png')] private var amazed_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/amazed_intensity_3.png')] private var amazed_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/angry_intensity_1.png')] private var angry_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/angry_intensity_2.png')] private var angry_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/angry_intensity_3.png')] private var angry_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/content_intensity_1.png')] private var content_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/content_intensity_2.png')] private var content_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/content_intensity_3.png')] private var content_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/delighted_intensity_1.png')] private var delighted_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/delighted_intensity_2.png')] private var delighted_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/delighted_intensity_3.png')] private var delighted_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/disgusted_intensity_1.png')] private var disgusted_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/disgusted_intensity_2.png')] private var disgusted_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/disgusted_intensity_3.png')] private var disgusted_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/dissatisfied_intensity_1.png')] private var dissatisfied_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/dissatisfied_intensity_2.png')] private var dissatisfied_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/dissatisfied_intensity_3.png')] private var dissatisfied_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/elated_intensity_1.png')] private var elated_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/elated_intensity_2.png')] private var elated_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/elated_intensity_3.png')] private var elated_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/enthusiastic_intensity_1.png')] private var enthusiastic_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/enthusiastic_intensity_2.png')] private var enthusiastic_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/enthusiastic_intensity_3.png')] private var enthusiastic_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/excited_intensity_1.png')] private var excited_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/excited_intensity_2.png')] private var excited_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/excited_intensity_3.png')] private var excited_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/frustrated_intensity_1.png')] private var frustrated_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/frustrated_intensity_2.png')] private var frustrated_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/frustrated_intensity_3.png')] private var frustrated_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/happy_intensity_1.png')] private var happy_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/happy_intensity_2.png')] private var happy_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/happy_intensity_3.png')] private var happy_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/humiliated_intensity_1.png')] private var humiliated_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/humiliated_intensity_2.png')] private var humiliated_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/humiliated_intensity_3.png')] private var humiliated_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/irritated_intensity_1.png')] private var irritated_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/irritated_intensity_2.png')] private var irritated_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/irritated_intensity_3.png')] private var irritated_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/miserable_intensity_1.png')] private var miserable_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/miserable_intensity_2.png')] private var miserable_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/miserable_intensity_3.png')] private var miserable_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/outraged_intensity_1.png')] private var outraged_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/outraged_intensity_2.png')] private var outraged_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/outraged_intensity_3.png')] private var outraged_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/satisfied_intensity_1.png')] private var satisfied_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/satisfied_intensity_2.png')] private var satisfied_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/satisfied_intensity_3.png')] private var satisfied_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/surprised_intensity_1.png')] private var surprised_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/surprised_intensity_2.png')] private var surprised_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/surprised_intensity_3.png')] private var surprised_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/thrilled_intensity_1.png')] private var thrilled_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/thrilled_intensity_2.png')] private var thrilled_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/thrilled_intensity_3.png')] private var thrilled_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/uneasy_intensity_1.png')] private var uneasy_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/uneasy_intensity_2.png')] private var uneasy_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/uneasy_intensity_3.png')] private var uneasy_intensity_3:Class;
									[Embed(source='assets/verbatim_faces/unhappy_intensity_1.png')] private var unhappy_intensity_1:Class;
									[Embed(source='assets/verbatim_faces/unhappy_intensity_2.png')] private var unhappy_intensity_2:Class;
									[Embed(source='assets/verbatim_faces/unhappy_intensity_3.png')] private var unhappy_intensity_3:Class;
									
									
									[Bindable] private var _data:*;
									[Bindable] private var showDeleteDialog:Boolean = false;
									[Bindable] public override function set data(value:Object):void {
													this._data = value;
													this.showDeleteDialog = this.parentDocument['showDeleteDialog'];
													try { this.img_inst.source = this[this._data.@face.toString()]; }catch (e:*){}
													ts.text = this._data.@timestamp;
													t.htmlText=this._data;
													this.invalidateSize();
													t.width = (this.owner as List).width - this.img_inst.width - 40 - 80 - ((this.showDeleteDialog)?30:0);
													(this.owner as List).invalidateSize();
												}
												
												private function showCloseButton(e:MouseEvent):void {
													if(this.showDeleteDialog) this.d.visible = true;
												}
												private function hideCloseButton(e:MouseEvent):void {
													if(this.showDeleteDialog) this.d.visible = false;
												}
												
												private function d_click(event:MouseEvent):void {
													var p:ScorePopup = PopUpManager.createPopUp(this.owner as DisplayObject, ScorePopup, true) as ScorePopup;
													p.verbatim_id = this._data.@id;
													p.onDelete = function():void{
														this.parentDocument['ds']['onVerbatimDelete'](this.verbatim_id);
													}
													p.x = event.stageX - p.width;
													p.y = event.stageY - p.height/2;
												}
								]]>
								</mx:Script>
								<mx:Image id="img_inst" width="25" height="25" />
								<mx:Text id="t" selectable="false" />
								<mx:Text id="ts" textAlign="right" selectable="false" color="{uint(this._data.@ts_color)}" width="80" />
								<mx:HBox id="d" includeInLayout="{this.showDeleteDialog}" click="{this.d_click(event)}" width="15" height="15" buttonMode="true" useHandCursor="true" visible="false" backgroundImage="@Embed(source='assets/delete-button.png')" />
							</mx:HBox>
						</mx:Component>
					</mx:itemRenderer>
				</mx:List>
			</mx:VBox>
		</mx:VBox>
		
	</mx:VBox>	
</mx:HBox>
